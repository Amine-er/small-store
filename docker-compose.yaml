services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: admin
    volumes:
      - ./api-common/docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - microservice-net

  postgres:
    image: postgres:15.6
    container_name: postgres
    environment:
      POSTGRES_DB: shared_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./api-common/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservice-net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: shared_db
      KC_DB_SCHEMA: schema3
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - keycloak-data:/opt/keycloak/data
    depends_on:
      - postgres
    networks:
      - microservice-net

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservice-net

  eureka-server:
    build: infrastructures/eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservice-net

  config-server:
    build: infrastructures/config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-net

  api-gateway:
    build: modules/api-gateway
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-net

  product-service:
    build: modules/product-service
    ports:
      - "8082:8082"
      - "9090:9090"  # gRPC
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-net

  customer-service:
    build: modules/customer-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-net

  review-service:
    build: modules/review-service
    ports:
      - "7001:7001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-net

networks:
  microservice-net:
    driver: bridge

volumes:
  keycloak-data:
